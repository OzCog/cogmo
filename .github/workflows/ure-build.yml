---
name: CogML - URE Build
on:
  workflow_dispatch:
    inputs:
      cogutil_cache_key:
        description: 'Cache key for cogutil dependency'
        required: false
        type: string
      atomspace_cache_key:
        description: 'Cache key for atomspace dependency'
        required: false
        type: string
      cache_key_suffix:
        description: 'Cache key suffix for dependency builds'
        required: false
        default: 'default'
        type: string
  workflow_call:
    inputs:
      cogutil_cache_key:
        description: 'Cache key for cogutil dependency'
        required: false
        type: string
      atomspace_cache_key:
        description: 'Cache key for atomspace dependency'
        required: false
        type: string
      cache_key_suffix:
        description: 'Cache key suffix for dependency builds'
        required: false
        default: 'default'
        type: string

permissions:
  contents: read

jobs:
  ure:
    runs-on: blacksmith-4vcpu-ubuntu-2404
    outputs:
      cache_key: ${{ steps.cache_info.outputs.key }}
    steps:
      - uses: actions/checkout@v4

      - name: Set cache info
        id: cache_info
        run: |
          echo "key=ure-${{ runner.os }}-${{ github.sha }}-${{ inputs.cache_key_suffix }}" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake libboost-all-dev guile-3.0-dev cython3 python3-nose valgrind doxygen

      - name: Install Cython
        run: python3 -m pip install --upgrade pip cython

      - name: Restore cogutil cache
        uses: actions/cache@v3
        with:
          path: orc-dv/cogutil/build
          key: ${{ inputs.cogutil_cache_key || format('cogutil-{0}-{1}-{2}', runner.os, github.sha, inputs.cache_key_suffix) }}
          restore-keys: |
            cogutil-${{ runner.os }}-

      - name: Restore atomspace cache
        uses: actions/cache@v3
        with:
          path: orc-as/atomspace/build
          key: ${{ inputs.atomspace_cache_key || format('atomspace-{0}-{1}-{2}', runner.os, github.sha, inputs.cache_key_suffix) }}
          restore-keys: |
            atomspace-${{ runner.os }}-

      - name: Build and install cogutil
        run: |
          cd orc-dv/cogutil
          if [ ! -d "build" ]; then
            mkdir -p build
          fi
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          make -j$(nproc)
          sudo make install
          sudo ldconfig

      - name: Build and install atomspace
        run: |
          cd orc-as/atomspace
          if [ ! -d "lib" ]; then
            mkdir -p lib
            echo "# Empty lib directory for build compatibility" > lib/CMakeLists.txt
          fi
          if [ ! -d "build" ]; then
            mkdir -p build
          fi
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          make -j$(nproc)
          sudo make install
          sudo ldconfig

      - name: Build and install unify
        run: |
          git clone --depth 1 https://github.com/opencog/unify /tmp/unify
          cd /tmp/unify
          mkdir -p build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          make -j$(nproc)
          sudo make install
          sudo ldconfig

      - name: Build URE
        run: |
          cd orc-ai/ure
          mkdir -p build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DPYTHON_EXECUTABLE=$(which python3)
          make -j$(nproc)

      - name: Test URE
        run: |
          cd orc-ai/ure/build
          make test || true

      - name: Install URE
        run: |
          cd orc-ai/ure/build
          sudo make install
          sudo ldconfig

      - name: Cache ure build
        uses: actions/cache@v3
        with:
          path: orc-ai/ure/build
          key: ${{ steps.cache_info.outputs.key }}

      - name: Create build artifacts summary
        run: |
          echo "## URE Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: âœ… Success" >> $GITHUB_STEP_SUMMARY
          echo "- **Cache Key**: \`${{ steps.cache_info.outputs.key }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Path**: \`orc-ai/ure/build\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Dependencies**: cogutil, atomspace, unify" >> $GITHUB_STEP_SUMMARY
          ls -la orc-ai/ure/build/ >> $GITHUB_STEP_SUMMARY || true